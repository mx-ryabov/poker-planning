// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PokerPlanning.Infrastructure.src.Persistence;

#nullable disable

namespace PokerPlanning.Infrastructure.Migrations
{
    [DbContext(typeof(PokerPlanningDbContext))]
    [Migration("20231030195734_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PokerPlanning.Domain.src.Models.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PokerPlanning.Domain.src.Models.VotingSystemAggregate.Entities.VotingSystemVote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("VotingSystemId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VotingSystemId");

                    b.ToTable("VotingSystemVotes");
                });

            modelBuilder.Entity("PokerPlanning.Domain.src.Models.VotingSystemAggregate.VotingSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("VotingSystems", (string)null);
                });

            modelBuilder.Entity("PokerPlanning.Domain.src.Models.VotingSystemAggregate.Entities.VotingSystemVote", b =>
                {
                    b.HasOne("PokerPlanning.Domain.src.Models.VotingSystemAggregate.VotingSystem", null)
                        .WithMany("Votes")
                        .HasForeignKey("VotingSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokerPlanning.Domain.src.Models.VotingSystemAggregate.VotingSystem", b =>
                {
                    b.HasOne("PokerPlanning.Domain.src.Models.UserAggregate.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("PokerPlanning.Domain.src.Models.VotingSystemAggregate.VotingSystem", b =>
                {
                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
